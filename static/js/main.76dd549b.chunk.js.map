{"version":3,"sources":["components/UI/GameBar/GameBar.tsx","components/Square.tsx","components/GameField.tsx","App.tsx","index.tsx","components/UI/GameBar/GameBar.module.css"],"names":["GameBar","title","restart","className","styles","wrapper","content","onClick","icon","Square","state","number","changeState","outLine","draggable","getState","GameField","gameState","vinLine","map","i","j","has","App","defaultGameState","xVinState","oVinState","lines","useState","xStep","setXStep","endGame","setEndGame","setGameState","setTitle","Set","setVinLine","checkViners","getLine","arr","line","equals","a","b","length","gameOver","viner","num","newGameState","allowedMovesExists","console","log","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.76dd549b.chunk.js","sourcesContent":["import React, { FC } from 'react'\nimport styles from './GameBar.module.css'\n\ninterface GameBarProps {\n    title: string;\n    restart: Function;\n}\n\nconst GameBar: FC<GameBarProps> = ({ title, restart }) => {\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.content + \" neumorphism\"}>\n                <div className={styles.title}>{title}</div>\n                <div onClick={() => restart()} className={\"fa fa-refresh \" + styles.icon} aria-hidden=\"true\" />\n            </div>\n        </div>\n    )\n}\n\nexport default GameBar\n","import React, { useState } from 'react'\nimport { FC } from 'react'\n\ninterface SquareProps {\n    state: string;\n    number: number;\n    changeState: Function;\n    outLine: boolean;\n}\n\nconst Square: FC<SquareProps> = ({ state, number, changeState, outLine }) => {\n\n    function click() {\n        changeState(number)\n    }\n\n    function getState() {\n        switch (state) {\n            case 'X': return 'is-x';\n            case 'O': return 'is-o';\n            default: return 'is-empty';\n        }\n    }\n\n    return (\n        <div className=\"square__wrapper\" draggable=\"false\">\n            <div\n                className={'square neumorphism square--' + getState() + (outLine ? ' out ' : '')}\n                onClick={click}>\n            </div>\n        </div>\n    )\n}\n\nexport default Square\n","import React, { FC } from 'react'\nimport Square from './Square'\n\ninterface GameFieldProps {\n    gameState: string[];\n    changeState: Function;\n    vinLine: Set<number>;\n}\n\nconst GameField: FC<GameFieldProps> = ({ gameState, changeState, vinLine }) => {\n    return (\n        <div className=\"game-field__wrapper\">\n            <div className=\"game-field\">\n                {\n                    [0, 1, 2].map((i) =>\n                        <div className=\"row\" key={i}>\n                            {\n                                [0, 1, 2].map((j) =>\n                                    <Square\n                                        key={i * 3 + j}\n                                        number={i * 3 + j}\n                                        changeState={changeState}\n                                        state={gameState[i * 3 + j]}\n                                        outLine={vinLine.has(i * 3 + j)}\n                                    />\n                                )\n                            }\n                        </div>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default GameField\n","import React, { useEffect, useState } from 'react';\nimport './css/App.css';\nimport GameBar from './components/UI/GameBar/GameBar';\nimport GameField from './components/GameField';\n\nfunction App() {\n  const defaultGameState = ['', '', '', '', '', '', '', '', ''];\n  const xVinState = ['X', 'X', 'X'];\n  const oVinState = ['O', 'O', 'O'];\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ]\n\n  const [xStep, setXStep] = useState(true);\n  const [endGame, setEndGame] = useState(false);\n  const [gameState, setGameState] = useState(defaultGameState)\n  const [title, setTitle] = useState('X move');\n  const [vinLine, setVinLine] = useState<Set<number>>(new Set())\n\n  function checkViners(gameState: string[]): string {\n    const getLine = (arr: number[]) => arr.map((i) => gameState[i]);\n\n    for (const line of lines) {\n      switch (true) {\n        case equals(getLine(line), xVinState):\n          setVinLine(new Set(line));\n          return 'x_vin';\n        case equals(getLine(line), oVinState):\n          setVinLine(new Set(line));\n          return 'o_vin';\n        default: break;\n      }\n    }\n    return '';\n  }\n  function equals(a: string[], b: string[]) {\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  function restart() {\n    setGameState(defaultGameState)\n    setEndGame(false);\n    setXStep(true);\n    setVinLine(new Set());\n    setTitle('X move');\n  }\n\n  function allowedMovesExists(gameState: string[]) {\n    for (const square of gameState) {\n      if (square === '') return true;\n    }\n    return false;\n  }\n  function changeState(num: number) {\n    let newGameState = [...gameState];\n    if (!newGameState[num] && !endGame)\n      newGameState[num] = (xStep ? 'X' : 'O');\n    else\n      return;\n\n    setGameState(newGameState);\n\n    if (allowedMovesExists(newGameState))\n      setXStep(!xStep);\n    else {\n      console.log('Ходы кончились');\n      gameOver(checkViners(newGameState));\n      return;\n    }\n    if (checkViners(newGameState))\n      gameOver(checkViners(newGameState));\n    else\n      setTitle(`${(xStep ? 'O' : 'X')} move`);\n  }\n  function gameOver(viner: string) {\n    setEndGame(true);\n    switch (viner) {\n      case 'x_vin':\n        setTitle('      X vin!');\n        break;\n      case 'o_vin':\n        setTitle('      O vin!');\n        break;\n      default:\n        setTitle('Standoff');\n        break;\n    }\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"App__content\">\n        <GameBar title={title} restart={restart} />\n        <GameField gameState={gameState} changeState={changeState} vinLine={vinLine} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameBar_wrapper__1kr8k\",\"content\":\"GameBar_content__1fXxT\",\"icon\":\"GameBar_icon__KoSOV\",\"title\":\"GameBar_title__23pvH\",\"refresh\":\"GameBar_refresh__xGllH\"};"],"sourceRoot":""}