{"version":3,"sources":["types/game.ts","logic/game.ts","store/gameReducer.ts","components/GameBar/GameBar.tsx","components/Square/Square.tsx","components/GameField/GameField.tsx","hooks/useTypedSelector.ts","App.tsx","store/index.ts","index.tsx","components/Square/Square.module.css","components/GameBar/GameBar.module.css","components/GameField/GameField.module.css"],"names":["GameActionType","Winner","xVinLine","oVinLine","lines","equals","a","b","undefined","find","value","index","checkWinners","gameField","getLine","arr","map","num","line","changeTitle","payload","type","CHANGE_TITLE","actionPlayerMove","state","action","field","endGame","newGameState","xMove","square","title","GameBar","dispath","useDispatch","className","styles","wrapper","content","onClick","RESTART_GAME","icon","Square","number","outline","draggable","is_x","is_o","is_empty","getStyle","join","PLAYER_MOVE","GameField","gameState","vinLine","i","row","j","has","useTypedSelector","useSelector","App","game","useState","Set","setVinLine","useEffect","winner","X","O","gameOver","currentLine","Tie","findWinners","rootReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1971468e.chunk.js","sourcesContent":["export interface GameState {\n    field: string[];\n    xMove: boolean;\n    endGame: boolean;\n    title: string;\n}\n\nexport enum GameActionType {\n    PLAYER_MOVE = 'PLAYER_MOVE',\n    RESTART_GAME = 'RESTART_GAME',\n    CHANGE_TITLE = 'CHANGE_TITLE',\n}\n\nexport interface PlayerMove {\n    type: GameActionType.PLAYER_MOVE;\n    payload: number;\n}\n\nexport interface RestartGame {\n    type: GameActionType.RESTART_GAME;\n    payload: undefined;\n}\n\nexport interface ChangeTitle {\n    type: GameActionType.CHANGE_TITLE;\n    payload: string;\n}\n\nexport type GameActions = PlayerMove | RestartGame | ChangeTitle;\n\nexport enum Winner {\n    X,\n    O,\n    Tie,\n}\nexport type IndexedLine = [\n    number,\n    number,\n    number,\n]","import { IndexedLine, Winner } from '../types/game';\n\nconst xVinLine = ['X', 'X', 'X'];\nconst oVinLine = ['O', 'O', 'O'];\nconst lines: IndexedLine[] = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n]\n\nexport function allowedMovesExists(gameField: string[]) {\n    return gameField.find((square) => square === '') === undefined ? false : true;\n}\n\nfunction equals(a: string[], b: string[]) {\n    return a.find((value, index) => a[index] !== b[index]) === undefined ? true : false;\n}\n\nexport function findWinners(gameField: string[]): Winner {\n    const getLine = (arr: number[]) => arr.map((num) => gameField[num]);\n\n    for (const line of lines) {\n        const currentLine = getLine(line);\n        switch (true) {\n            case equals(currentLine, xVinLine):\n                return Winner.X;\n            case equals(currentLine, oVinLine):\n                return Winner.O;\n            default: break;\n        }\n    }\n    return Winner.Tie;\n}\n\nexport function checkWinners(gameField: string[]) {\n    const getLine = (arr: number[]) => arr.map((num) => gameField[num]);\n    const findler = (line: number[]) => equals(getLine(line), xVinLine) || equals(getLine(line), oVinLine);\n\n    return lines.find(findler);\n}\n","import { allowedMovesExists, checkWinners } from '../logic/game';\nimport { GameActions, GameActionType, GameState, PlayerMove } from '../types/game';\n\nconst defaultState = (): GameState => ({\n    field: ['', '', '', '', '', '', '', '', ''],\n    xMove: true,\n    endGame: false,\n    title: 'X move',\n});\n\nexport const gameReducer = (state = defaultState(), action: GameActions): GameState => {\n    switch (action.type) {\n        case GameActionType.PLAYER_MOVE:\n            return actionPlayerMove(state, action);\n        case GameActionType.RESTART_GAME:\n            return defaultState();\n        case GameActionType.CHANGE_TITLE:\n            return { ...state, title: action.payload };\n        default:\n            return state;\n    }\n}\n\nexport const playerMove = (payload: number) => ({ type: GameActionType.PLAYER_MOVE, payload })\nexport const restartGame = () => ({ type: GameActionType.RESTART_GAME, payload: undefined })\nexport const changeTitle = (payload: string) => ({ type: GameActionType.CHANGE_TITLE, payload })\n\nfunction actionPlayerMove(state: GameState, action: PlayerMove): GameState {\n    // if the field is not occupied and the game is not over.\n    if (state.field[action.payload] || state.endGame)\n        return state;\n\n    let newGameState = { ...state };\n    newGameState.field[action.payload] = (newGameState.xMove ? 'X' : 'O');\n\n    if (checkWinners(newGameState.field))\n        newGameState.endGame = true;\n\n    if (allowedMovesExists(newGameState.field))\n        newGameState.xMove = !newGameState.xMove;\n    else\n        newGameState.endGame = true;\n\n    newGameState.title = (newGameState.xMove ? 'X move' : 'O move');\n    return newGameState;\n}","import React, { FC } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { restartGame } from '../../store/gameReducer';\nimport styles from './GameBar.module.css'\n\ninterface GameBarProps {\n    title: string;\n}\n\nconst GameBar: FC<GameBarProps> = ({ title}) => {\n    const dispath = useDispatch();\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.content + \" neumorphism\"}>\n                <div className={styles.title}>{title}</div>\n                <div onClick={() => dispath(restartGame())} className={\"fa fa-refresh \" + styles.icon} aria-hidden=\"true\" />\n            </div>\n        </div>\n    )\n}\n\nexport default GameBar\n","import React from 'react'\nimport { FC } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { playerMove } from '../../store/gameReducer'\nimport styles from './Square.module.css'\n\ninterface SquareProps {\n    state: string;\n    number: number;\n    outline: boolean;\n}\n\nconst Square: FC<SquareProps> = ({ state, number, outline }) => {\n    const dispath = useDispatch();\n\n    function click() {\n        dispath(playerMove(number));\n    }\n\n    function getStyle() {\n        switch (state) {\n            case 'X': return styles.is_x;\n            case 'O': return styles.is_o;\n            default: return styles.is_empty;\n        }\n    }\n\n    return (\n        <div className={styles.wrapper} draggable=\"false\">\n            <div\n                className={[styles.content, getStyle(), (outline ? styles.outline : ''), 'neumorphism'].join(' ')}\n                onClick={click}>\n            </div>\n        </div>\n    )\n}\n\nexport default Square\n","import React, { FC } from 'react';\nimport Square from '../Square/Square';\nimport styles from './GameField.module.css';\n\ninterface GameFieldProps {\n    gameState: string[];\n    vinLine: Set<number>;\n}\n\nconst GameField: FC<GameFieldProps> = ({ gameState, vinLine }) => {\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles.content}>\n                {[0, 1, 2].map((i) =>\n                    <div className={styles.row} key={i}>\n                        {[0, 1, 2].map((j) =>\n                            <Square\n                                key={i * 3 + j}\n                                number={i * 3 + j}\n                                state={gameState[i * 3 + j]}\n                                outline={vinLine.has(i * 3 + j)}\n                            />\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default GameField\n","import { TypedUseSelectorHook, useSelector } from 'react-redux';\r\nimport { RootState } from '../store';\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","import React, { useEffect, useState } from 'react';\nimport './css/App.css';\nimport GameBar from './components/GameBar/GameBar';\nimport GameField from './components/GameField/GameField';\nimport { useTypedSelector } from './hooks/useTypedSelector';\nimport { checkWinners, findWinners } from './logic/game';\nimport { useDispatch } from 'react-redux';\nimport { changeTitle } from './store/gameReducer';\nimport { Winner } from './types/game';\n\nfunction App() {\n  const dispath = useDispatch();\n  const gameState = useTypedSelector(state => state.game);\n  const [vinLine, setVinLine] = useState<Set<number>>(new Set())\n\n  useEffect(() => {\n    if (gameState.endGame)\n      gameOver(findWinners(gameState.field));\n    else\n      setVinLine(new Set());\n  }, [gameState.endGame])\n\n  function gameOver(winner: Winner) {\n    switch (winner) {\n      case Winner.X:\n        dispath(changeTitle('X win!'));\n        break;\n      case Winner.O:\n        dispath(changeTitle('O win!'));\n        break;\n      default:\n        dispath(changeTitle('Tie!'))\n        return;\n    }\n    setVinLine(new Set(checkWinners(gameState.field)));\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__content\">\n        <GameBar title={gameState.title} />\n        <GameField gameState={gameState.field} vinLine={vinLine} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { gameReducer } from './gameReducer';\n\nconst rootReducer = combineReducers({\n    game: gameReducer\n})\n\nexport const store = createStore(rootReducer, composeWithDevTools());\n\nexport type RootState = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Square_wrapper__2c_7r\",\"content\":\"Square_content__1E19F\",\"is_empty\":\"Square_is_empty__2xh96\",\"is_x\":\"Square_is_x__gEuLP\",\"is_o\":\"Square_is_o__2fcgo\",\"neumorphism\":\"Square_neumorphism__1ExXp\",\"outline\":\"Square_outline__17nGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameBar_wrapper__1G1rY\",\"content\":\"GameBar_content__1lT3T\",\"icon\":\"GameBar_icon__3qAWn\",\"title\":\"GameBar_title__1rdyx\",\"refresh\":\"GameBar_refresh__1k5B5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"GameField_wrapper__eQpQ0\",\"content\":\"GameField_content__jPfGE\",\"row\":\"GameField_row__25rVG\"};"],"sourceRoot":""}